# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

  run-application:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Install necessary OpenGL and X11 libraries
    - name: Install GLFW and OpenGL Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev

    - name: Install Xvfb (Virtual Display)
      run: sudo apt-get install -y xvfb

    - name: Start Xvfb
      run: Xvfb :99 &

    - name: Set DISPLAY environment variable
      run: export DISPLAY=:99

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run with Gradle Wrapper
      run: |
        export DISPLAY=:99
        ./gradlew run --args='workflowtest'

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  run-application-cheerpj:
    run-application:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Install necessary OpenGL and X11 libraries
    - name: Install GLFW and OpenGL Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev

    - name: Install Xvfb (Virtual Display)
      run: sudo apt-get install -y xvfb

    - name: Start Xvfb
      run: Xvfb :99 &

    - name: Set DISPLAY environment variable
      run: echo "DISPLAY=:99" >> $GITHUB_ENV

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # Download and install CheerpJ
    - name: Download CheerpJ 3.0
      run: |
        curl -L -o cheerpj.zip https://leaningtech.com/download/cheerpj3.0.zip
        unzip cheerpj.zip -d cheerpj
        chmod +x cheerpj/bin/*

    - name: Run CheerpJ to Convert Java to JavaScript
      run: |
        export CHEERPJ_PATH=$(pwd)/cheerpj
        $CHEERPJ_PATH/bin/cheerpjfy ./build/libs/your-application.jar

    - name: Run CheerpJ in Browser
      run: |
        echo "Running application in CheerpJ..."
        # Here you might set up an HTTP server to serve the CheerpJ files if you need to test in a browser environment.
      

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
